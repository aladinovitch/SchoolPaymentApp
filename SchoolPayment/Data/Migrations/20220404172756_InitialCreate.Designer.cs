// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolPayment.Data;

#nullable disable

namespace SchoolPayment.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220404172756_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "4a71d9e0-6de8-4a5c-8a7d-f42747142a86",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d5d5f3f3-d259-4472-95f7-85b5c204267a",
                            Email = "manager@email.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "MANAGER@EMAIL.COM",
                            NormalizedUserName = "MANAGER@EMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECa0gBQ7+8zJZCawxf8NPtzTp8TaPs1JC0nBZL5+gn7dY2rU2tXVR6YiXeQibu+2tQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3eda00dc-aeb2-4d03-b45d-58095baac150",
                            TwoFactorEnabled = false,
                            UserName = "manager@email.com"
                        },
                        new
                        {
                            Id = "16683553-5dff-4c96-ae6b-085564384449",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5b19a28e-e2ea-4087-a192-e1a4780c3dd2",
                            Email = "basic@email.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "BASIC@EMAIL.COM",
                            NormalizedUserName = "BASIC@EMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEKnDlDYvOQtA5KSQKeXL5KWcnHuroNJHyjtaWnmjg0PycrC/ACrfclBXXi6g6eQAjQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b14bbf6a-9b07-4826-adc0-8492889352a0",
                            TwoFactorEnabled = false,
                            UserName = "basic@email.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "Manage Role",
                            ClaimValue = "true",
                            UserId = "4a71d9e0-6de8-4a5c-8a7d-f42747142a86"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "Basic Role",
                            ClaimValue = "true",
                            UserId = "16683553-5dff-4c96-ae6b-085564384449"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SchoolPayment.Models.Animation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Attendance")
                        .HasColumnType("bit");

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Animation");

                    b.HasIndex("SessionId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Animation", "SchoolPayment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Attendance = true,
                            SessionId = 1,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            Attendance = true,
                            SessionId = 2,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 3,
                            Attendance = false,
                            Observation = "Meeting to discuss progress",
                            SessionId = 3,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 4,
                            Attendance = true,
                            SessionId = 1,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 5,
                            Attendance = false,
                            Observation = "Long weekend",
                            SessionId = 2,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 6,
                            Attendance = true,
                            SessionId = 3,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 7,
                            Attendance = true,
                            SessionId = 1,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 8,
                            Attendance = true,
                            SessionId = 2,
                            TeacherId = 3
                        });
                });

            modelBuilder.Entity("SchoolPayment.Models.Deposit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Deposit");

                    b.HasIndex("StudentId");

                    b.ToTable("Deposit", "SchoolPayment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1000,
                            Date = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 950,
                            Date = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 2000,
                            Date = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 2
                        },
                        new
                        {
                            Id = 4,
                            Amount = 1950,
                            Date = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 2
                        },
                        new
                        {
                            Id = 5,
                            Amount = 1900,
                            Date = new DateTime(2021, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 2
                        },
                        new
                        {
                            Id = 6,
                            Amount = 3000,
                            Date = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 3
                        },
                        new
                        {
                            Id = 7,
                            Amount = 2900,
                            Date = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 3
                        },
                        new
                        {
                            Id = 8,
                            Amount = 2800,
                            Date = new DateTime(2021, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 3
                        },
                        new
                        {
                            Id = 9,
                            Amount = 2700,
                            Date = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 3
                        });
                });

            modelBuilder.Entity("SchoolPayment.Models.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Module");

                    b.ToTable("Module", "SchoolPayment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "English : Introductory Course"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Français : Terminale littéraire"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Math : Third year midschool"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Physics : Final year scientific "
                        });
                });

            modelBuilder.Entity("SchoolPayment.Models.Participation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Attendance")
                        .HasColumnType("bit");

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Participation");

                    b.HasIndex("SessionId");

                    b.HasIndex("StudentId");

                    b.ToTable("Participation", "SchoolPayment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Attendance = true,
                            SessionId = 1,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            Attendance = true,
                            SessionId = 2,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 3,
                            Attendance = true,
                            SessionId = 3,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 4,
                            Attendance = false,
                            Observation = "Study for exams",
                            SessionId = 4,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 5,
                            Attendance = true,
                            SessionId = 1,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 6,
                            Attendance = true,
                            SessionId = 2,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 7,
                            Attendance = true,
                            SessionId = 3,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 8,
                            Attendance = true,
                            SessionId = 4,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 9,
                            Attendance = true,
                            SessionId = 1,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 10,
                            Attendance = true,
                            SessionId = 2,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 11,
                            Attendance = false,
                            Observation = "Abandon",
                            SessionId = 3,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 12,
                            Attendance = false,
                            Observation = "Abandon",
                            SessionId = 4,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 13,
                            Attendance = true,
                            SessionId = 1,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 14,
                            Attendance = true,
                            SessionId = 2,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 15,
                            Attendance = true,
                            SessionId = 3,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 16,
                            Attendance = true,
                            SessionId = 4,
                            StudentId = 4
                        });
                });

            modelBuilder.Entity("SchoolPayment.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Payment");

                    b.HasIndex("TeacherId");

                    b.ToTable("Payment", "SchoolPayment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 15000,
                            Date = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 17000,
                            Date = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 19000,
                            Date = new DateTime(2021, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 4,
                            Amount = 25000,
                            Date = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 5,
                            Amount = 27000,
                            Date = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 6,
                            Amount = 29000,
                            Date = new DateTime(2021, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 7,
                            Amount = 30000,
                            Date = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 8,
                            Amount = 32000,
                            Date = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 9,
                            Amount = 35000,
                            Date = new DateTime(2021, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeacherId = 3
                        });
                });

            modelBuilder.Entity("SchoolPayment.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Session");

                    b.HasIndex("ModuleId");

                    b.ToTable("Session", "SchoolPayment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModuleId = 1,
                            Number = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2021, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModuleId = 1,
                            Number = 2
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModuleId = 1,
                            Number = 3
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2021, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModuleId = 2,
                            Number = 1
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2021, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModuleId = 2,
                            Number = 2
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2021, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModuleId = 2,
                            Number = 3
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(2021, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModuleId = 3,
                            Number = 1
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModuleId = 3,
                            Number = 2
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateTime(2021, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModuleId = 3,
                            Number = 3
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateTime(2021, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModuleId = 4,
                            Number = 1
                        },
                        new
                        {
                            Id = 11,
                            Date = new DateTime(2021, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModuleId = 4,
                            Number = 2
                        },
                        new
                        {
                            Id = 12,
                            Date = new DateTime(2021, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModuleId = 4,
                            Number = 3
                        });
                });

            modelBuilder.Entity("SchoolPayment.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Registration")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK_Student");

                    b.ToTable("Student", "SchoolPayment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Discount = 0f,
                            Fname = "Hicham",
                            Lname = "Bouhachemi",
                            Number = "2020/26/001",
                            Registration = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(2000, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Discount = 0.05f,
                            Fname = "Youcef",
                            Lname = "Benyoucef",
                            Number = "2020/26/002",
                            Registration = new DateTime(2020, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Birthdate = new DateTime(2000, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Discount = 0.1f,
                            Fname = "Abdelkader",
                            Lname = "Boukadir",
                            Number = "2020/26/003",
                            Registration = new DateTime(2020, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Birthdate = new DateTime(2000, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Discount = 0.15f,
                            Fname = "Yousra",
                            Lname = "Yassira",
                            Number = "2020/26/004",
                            Registration = new DateTime(2020, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Birthdate = new DateTime(2000, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Discount = 0.2f,
                            Fname = "Bouchra",
                            Lname = "Benbacha",
                            Number = "2020/26/005",
                            Registration = new DateTime(2020, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Birthdate = new DateTime(2000, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Discount = 0.25f,
                            Fname = "Amina",
                            Lname = "Benamina",
                            Number = "2020/26/004",
                            Registration = new DateTime(2020, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SchoolPayment.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Teacher");

                    b.ToTable("Teacher", "SchoolPayment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fname = "Amer",
                            Lname = "Benamer",
                            Number = "E001"
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(1982, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fname = "Ilham",
                            Lname = "Benilham",
                            Number = "E002"
                        },
                        new
                        {
                            Id = 3,
                            Birthdate = new DateTime(1983, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fname = "Ismail",
                            Lname = "Bousmail",
                            Number = "E003"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolPayment.Models.Animation", b =>
                {
                    b.HasOne("SchoolPayment.Models.Session", "Session")
                        .WithMany("SessionAnimations")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolPayment.Models.Teacher", "Teacher")
                        .WithMany("TeacherAnimations")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SchoolPayment.Models.Deposit", b =>
                {
                    b.HasOne("SchoolPayment.Models.Student", "Student")
                        .WithMany("StudentDeposits")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolPayment.Models.Participation", b =>
                {
                    b.HasOne("SchoolPayment.Models.Session", "Session")
                        .WithMany("SessionParticipations")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolPayment.Models.Student", "Student")
                        .WithMany("StudentParticipations")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolPayment.Models.Payment", b =>
                {
                    b.HasOne("SchoolPayment.Models.Teacher", "Teacher")
                        .WithMany("TeacherPayments")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SchoolPayment.Models.Session", b =>
                {
                    b.HasOne("SchoolPayment.Models.Module", "Module")
                        .WithMany("ModuleSessions")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("SchoolPayment.Models.Module", b =>
                {
                    b.Navigation("ModuleSessions");
                });

            modelBuilder.Entity("SchoolPayment.Models.Session", b =>
                {
                    b.Navigation("SessionAnimations");

                    b.Navigation("SessionParticipations");
                });

            modelBuilder.Entity("SchoolPayment.Models.Student", b =>
                {
                    b.Navigation("StudentDeposits");

                    b.Navigation("StudentParticipations");
                });

            modelBuilder.Entity("SchoolPayment.Models.Teacher", b =>
                {
                    b.Navigation("TeacherAnimations");

                    b.Navigation("TeacherPayments");
                });
#pragma warning restore 612, 618
        }
    }
}
